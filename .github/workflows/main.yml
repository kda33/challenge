name: CI/CD for Challenge

on:
  push:
    branches:
      - master

jobs:
  build1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [build1]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build microservice_a
      id: build
      uses: docker/build-push-action@v2
      with:
        context: .
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/microservice_a
        labels: latest
        file: ./flask_200/Dockerfile
        push: false

    - name: Test with Python script
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m venv env
        source env/bin/activate
        pip install -r requirements.txt

    - name: Run Python script for testing
      run: |
        docker run -d --name microservice_a ${{ secrets.DOCKERHUB_USERNAME }}/microservice_a:latest
        docker ps -a
        docker images
        sleep 5
        docker logs microservice_a
        source env/bin/activate
        python python-test/python_test.py
    -
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Docker push if success
      if: success()
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/microservice_a:latest
  
  build2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [build2]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build microservice_b
      id: build
      uses: docker/build-push-action@v2
      with:
        context: .
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/microservice_b
        labels: latest
        file: ./flask_200/Dockerfile
        push: false

    - name: Test with Python script
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m venv env
        source env/bin/activate
        pip install -r requirements.txt

    - name: Run Python script for testing
      run: |
        docker run -d --name microservice_b ${{ secrets.DOCKERHUB_USERNAME }}/microservice_b:latest
        docker ps -a
        docker images
        sleep 5
        docker logs microservice_b
        source env/bin/activate
        python python-test/python_test.py

    -
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Docker push if success
      if: success()
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/microservice_b:latest

  build3:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [build3]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build microservice_c
      id: build
      uses: docker/build-push-action@v2
      with:
        context: .
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/microservice_c
        labels: latest
        file: ./flask_500/Dockerfile
        push: false

    - name: Test with Python script
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m venv env
        source env/bin/activate
        pip install -r requirements.txt

    - name: Run Python script for testing
      run: |
        docker run -d --name microservice_c ${{ secrets.DOCKERHUB_USERNAME }}/microservice_c:latest
        docker ps -a
        docker images
        sleep 5
        docker logs microservice_c
        source env/bin/activate
        python python-test/python_test.py
    -
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    -
      name: Docker push if success
      if: success()
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/microservice_c:latest

